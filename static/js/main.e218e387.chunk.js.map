{"version":3,"sources":["Button.js","Contact.js","Contacts.js","Input.js","ContactForm.js","App.js","index.js"],"names":["Button","buttonAction","buttonText","onClick","className","Contact","contact","setContact","handleDelete","setIsEditing","firstName","lastName","phoneNumber","Contacts","contactList","handleClear","length","type","name","value","map","id","Input","placeholder","handleChange","required","onChange","ContactForm","setContactList","isEditing","handleInputChange","event","target","onSubmit","preventDefault","payload","uuidv4","contactIndex","findIndex","newArr","splice","data","App","useState","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","oldContactList","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e218e387.chunk.js","sourcesContent":["import React from 'react'\r\nconst Button = ({buttonAction, buttonText}) => {\r\n    return (\r\n        <>\r\n            <button onClick={buttonAction} className='btn list-btn'>{buttonText}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Contact = ({ contact, setContact, handleDelete, setIsEditing }) => {\r\n  \r\n  const handleSetEdit = () => {\r\n    setContact(contact);\r\n    setIsEditing(true);\r\n  }\r\n\r\n  return (\r\n        <li>\r\n          {contact.firstName} {contact.lastName} {contact.phoneNumber}\r\n          <Button buttonAction={handleSetEdit} buttonText=\"Edit\" /> <Button buttonAction={() => handleDelete(contact)} buttonText=\"Delete\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react'\r\nimport Contact from './Contact';\r\n\r\nconst Contacts = ({ contactList, setContact, handleClear, handleDelete, setIsEditing })  => {\r\n\r\n    return (\r\n        <div className=\"contact-list\">\r\n            <h1 className=\"title\">Contact List</h1>\r\n                <div className=\"contacts\">\r\n                    <h2 className=\"all-contact\">All Contacts ({contactList.length})</h2>\r\n                    <button type=\"clear\" className=\"btn clear-btn\" name=\"clear_btn\" value=\"clear\" onClick={handleClear}>Clear</button>\r\n                </div>\r\n            <ul className=\"list\">\r\n                {contactList.map((contact) => {\r\n                    return (\r\n                        <Contact key={contact.id} contact={contact} setContact={setContact} handleDelete={handleDelete} setIsEditing={setIsEditing} />\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Contacts;\r\n\r\n","import React from 'react';\r\n\r\nconst Input = ({ id, name, value, placeholder, handleChange }) => {\r\n   return (\r\n       <input\r\n        type=\"text\"\r\n        required\r\n        className=\"input\"\r\n        id={id}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={handleChange}\r\n      /> \r\n   ) \r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from './Input';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactForm = ({ setContactList, contact, setContact, isEditing, setIsEditing }) => {\r\n  \r\n\r\n  const handleInputChange = (event) => {\r\n    setContact({ ...contact, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n     event.preventDefault();\r\n     const payload = { id: uuidv4(), ...contact };\r\n\r\n     if (!isEditing) {\r\n        setContactList((data) => {\r\n          return [...data, payload];\r\n        });\r\n     } else {\r\n       setContactList((contactList) => {\r\n          const contactIndex = contactList.findIndex((contact) => contact.id === payload.id);\r\n          const newArr = [...contactList];\r\n          newArr.splice(contactIndex, 1, payload);\r\n\r\n          return newArr;\r\n       });\r\n       setIsEditing(false);\r\n     }\r\n\r\n     setContact({\r\n      firstName: '',\r\n      lastName: '',\r\n      phoneNumber: ''\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrap\">\r\n      <h1>Contact Form</h1>\r\n      <p>Please fill the form below</p>\r\n\r\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <Input id=\"firstname\" value={contact.firstName} name=\"firstName\" placeholder=\"First Name\" handleChange={handleInputChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input id=\"lastname\" value={contact.lastName} name=\"lastName\" placeholder=\"Last Name\" handleChange={handleInputChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input id=\"phonenumber\" value={contact.phoneNumber} name=\"phoneNumber\" placeholder=\"Phone Number\" handleChange={handleInputChange} />\r\n        </div>\r\n\r\n        <input type=\"submit\" className=\"btn\" name=\"sumbit_btn\" value={isEditing ? \"Save\" : \"Submit\" } />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Contacts from './Contacts';\nimport ContactForm from './ContactForm';\n\n\nconst App = () => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [contactList, setContactList] = useState([]);\n  const [contact, setContact] = useState({\n    firstName: '',\n    lastName: '',\n    phoneNumber: ''\n  });\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem('contactList'));\n    localStorage.setItem('contactList', JSON.stringify(contactList));\n    // setContactList(contacts);\n  }, [contactList]);\n\n  const handleClear = () => {\n    setContactList([]);\n  }\n\n  const handleDelete = (contact) => {\n    setContactList((oldContactList) => { \n      const newContactList = oldContactList.filter((data) =>  { return contact.id !== data.id });\n      return newContactList;\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <ContactForm\n        setContactList={setContactList}\n        contact={contact}\n        setContact={setContact}\n        isEditing={isEditing}\n        setIsEditing={setIsEditing}\n      />\n      <Contacts\n        contactList={contactList}\n        setContact={setContact}\n        handleClear={handleClear}\n        handleDelete={handleDelete}\n        setIsEditing={setIsEditing}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Counter from './CounterApp';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}